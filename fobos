[modes]
modes = gnu gnu-debug
        intel intel-debug
        gnu-coverage

[common-variables]
$CSTATIC_GNU     = -cpp -c -frealloc-lhs
$CSTATIC_INT     = -cpp -c -assume realloc_lhs
$DEBUG_GNU       = -O0 -g3 -Warray-bounds -Wcharacter-truncation -Wline-truncation -Wimplicit-interface -Wimplicit-procedure -Wunderflow -Wuninitialized -fcheck=all -fmodule-private -ffree-line-length-132 -fimplicit-none -fbacktrace -fdump-core -finit-real=nan -std=f2008 -fall-intrinsics -fopenmp
$DEBUG_INT       = -O0 -debug all -check all -warn all -extend-source 132 -traceback -gen-interfaces -fp-stack-check -fstack-protector-all -ftrapuv -no-ftz -std08 -qopenmp
$OPTIMIZE_GNU    = -O3 -fopenmp
$OPTIMIZE_INT    = -O2 -qopenmp

# main modes
[gnu]
help            = Build in release mode with GNU gfortran
compiler        = gnu
cflags          = $CSTATIC_GNU $OPTIMIZE_GNU
lflags          = $OPTIMIZE_GNU
cflags_heritage = True
build_dir       = build
mod_dir         = mod
obj_dir         = obj
src             = src
colors          = True
quiet           = False
log             = True
jobs            = 10

[gnu-debug]
help            = Build in debug mode with GNU gfortran
compiler        = gnu
cflags          = $CSTATIC_GNU $DEBUG_GNU
lflags          = $DEBUG_GNU
cflags_heritage = True
build_dir       = build
mod_dir         = mod
obj_dir         = obj
src             = src
colors          = True
quiet           = False
log             = True
jobs            = 10

[intel]
help            = Build in release mode with Intel Fortran
compiler        = intel
cflags          = $CSTATIC_INT $OPTIMIZE_INT
lflags          = $OPTIMIZE_INT
cflags_heritage = True
build_dir       = build
mod_dir         = mod
obj_dir         = obj
src             = src
colors          = True
quiet           = False
log             = True
jobs            = 10

[intel-debug]
help            = Build test in debug mode with Intel Fortran
compiler        = intel
cflags          = $CSTATIC_INT $DEBUG_INT
lflags          = $DEBUG_INT
cflags_heritage = True
build_dir       = build
mod_dir         = mod
obj_dir         = obj
src             = src
colors          = True
quiet           = False
log             = True
jobs            = 10

[gnu-coverage]
help            = Build in release-coverage mode with GNU gfortran
compiler        = gnu
cflags          = $CSTATIC_GNU $OPTIMIZE_GNU
lflags          = $OPTIMIZE_GNU
coverage        = True
cflags_heritage = True
build_dir       = build
mod_dir         = mod
obj_dir         = obj
src             = src
colors          = True
quiet           = False
log             = True
jobs            = 10

# rules
[rule-coverage-analysis]
help    = Rule for performing coverage analysis and saving reports in markdown
rule_1  = FoBiS.py build -mode gnu-coverage
rule_2  = (time ./build/euler-1D --Ni 384 --order 7) &> profiling/Ni_384-Order_7/cputime
rule_3  = gcov -o ./build/obj/ src/Euler-1D/*.f90
rule_4  = FoBiS.py rule -gcov_analyzer profiling/Ni_384-Order_7 Coverage-Analysis
rule_5  = rm -rf *.gcov build*
rule_6  = FoBiS.py build -mode gnu-coverage
rule_7  = (time ./build/euler-1D --Ni 384 --order 5) &> profiling/Ni_384-Order_5/cputime
rule_8  = gcov -o ./build/obj/ src/Euler-1D/*.f90
rule_9  = FoBiS.py rule -gcov_analyzer profiling/Ni_384-Order_5 Coverage-Analysis
rule_10 = rm -rf *.gcov build*
rule_11 = FoBiS.py build -mode gnu-coverage
rule_12 = (time ./build/euler-1D --Ni 768  --order 3) &> profiling/Ni_768-Order_3/cputime
rule_13 = gcov -o ./build/obj/ src/Euler-1D/*.f90
rule_14 = FoBiS.py rule -gcov_analyzer profiling/Ni_768-Order_3 Coverage-Analysis
rule_15 = rm -rf *.gcov build*
rule_16 = FoBiS.py build -mode gnu-coverage
rule_17 = (time ./build/euler-1D --Ni 2048 --order 1) &> profiling/Ni_2048-Order_1/cputime
rule_18 = gcov -o ./build/obj/ src/Euler-1D/*.f90
rule_19 = FoBiS.py rule -gcov_analyzer profiling/Ni_2048-Order_1 Coverage-Analysis
rule_20 = rm -rf *.gcov build*

# rules
[rule-makedoc]
help   = Build documentation from source files
rule_1 = rm -rf doc/html/*
rule_2 = ford doc/main_page.md --debug
rule_3 = cp -r doc/html/publish/* doc/html/
rule_4 = rm -rf doc/html/publish

[rule-deldoc]
help = Delete documentation
rule = rm -rf doc/html/*

[rule-delexe]
help = Delete exes
rule = rm -rf build/

[rule-clean]
help = Clean the project tree
rule_1 = FoBiS.py rule -ex deldoc
rule_2 = FoBiS.py rule -ex delexe
rule_3 = rm -f *.gcov
